---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: thanos-ruler
  name: thanos-ruler
  namespace: prombench
data:
  alertRelabelConfigs.yaml: LSByZXBsYWNlbWVudDogUHJvbWV0aGV1cwogIHNvdXJjZV9sYWJlbHM6CiAgLSBhbGVydG5hbWUKICB0YXJnZXRfbGFiZWw6IGNvbW11bml0eQotIHJlcGxhY2VtZW50OiBBbGVydG1hbmFnZXIKICBzb3VyY2VfbGFiZWxzOgogIC0gYWxlcnRuYW1lCiAgdGFyZ2V0X2xhYmVsOiBwcm9qZWN0Ci0gcmVwbGFjZW1lbnQ6IGh0dHBzOi8vZ2l0aHViLmNvbS9wcm9tZXRoZXVzL2FsZXJ0bWFuYWdlcgogIHNvdXJjZV9sYWJlbHM6CiAgLSBhbGVydG5hbWUKICB0YXJnZXRfbGFiZWw6IHJlcG9fdXJsCg==
---
apiVersion: monitoring.coreos.com/v1
kind: ThanosRuler
metadata:
  labels:
    app: thanos-ruler
  name: bench
  namespace: prombench
spec:
  image: quay.io/thanos/thanos:v0.32.5
  version: v0.32.5
  serviceAccountName: prombench
  securityContext:
    # run as nobody
    fsGroup: 65534
  labels:
    xxxx_cluster_id: bench_cluster
  replicas: 2
  nodeSelector:
    kubernetes.io/os: linux
  # tolerations:
  # - effect: NoSchedule
  #   key: dedicated
  #   value: master
  # - effect: NoSchedule
  #   key: CriticalAddonsOnly
  #   value: "True"
  logLevel: info
  alertRelabelConfigs:
    name: thanos-ruler
    key: alertRelabelConfigs.yaml
  queryEndpoints:
  - dnssrv+_web._tcp.thanos-query
  alertmanagersUrl:
  - dnssrv+http://_web._tcp.alertmanager-operated
  alertQueryUrl: http://prombench.web.default.prometheus.io
  evaluationInterval: 30s
  ruleNamespaceSelector: {}
  ruleSelector:
    matchLabels:
      prometheus.io/used-by: "bench"
  retention: 30d
  resources:
    # limits:
    #   cpu: "2000m"
    #   memory: "4096Mi"
    requests:
      cpu: "100m"
      memory: "128Mi"
  storage:
    disableMountSubPath: true
    volumeClaimTemplate:
      metadata:
        name: storage
      spec:
        storageClassName: general
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 100Gi
  podMetadata:
    labels:
      app: thanos-ruler
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app: thanos-ruler
              thanos-ruler: bench
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-ruler
  namespace: prombench
spec:
  ports:
  - name: web
    port: 10902
    targetPort: web
  selector:
    app.kubernetes.io/name: thanos-ruler
  type: NodePort
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  labels:
    prometheus.io/used-by: bench
  name: thanos-ruler
  namespace: prombench
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos-ruler
  namespaceSelector:
    matchNames:
      - prombench
  podMetricsEndpoints:
  # thanos-ruler
  - path: /metrics
    relabelings:
      - sourceLabels:
          - __meta_kubernetes_pod_container_port_number
        regex: "10902"
        action: keep
      - regex: __meta_kubernetes_pod_(node_name|host_ip)
        action: labelmap
      - sourceLabels:
          - node_name
        action: replace
        targetLabel: node
      - targetLabel: job
        replacement: thanos-ruler
        action: replace
  # config-reloader
  - path: /metrics
    relabelings:
      - sourceLabels:
          - __meta_kubernetes_pod_container_port_number
          - __meta_kubernetes_pod_container_init
        regex: "8080;false"
        action: keep
      - regex: __meta_kubernetes_pod_(node_name|host_ip)
        action: labelmap
      - sourceLabels:
          - node_name
        action: replace
        targetLabel: node
      - targetLabel: job
        replacement: thanos-ruler-config-reloader
        action: replace
