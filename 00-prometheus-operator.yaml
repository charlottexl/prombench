---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    describe: Benchmark for prometheus-thanos based monitoring systems.
  name: prombench
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prombench
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: prombench
    namespace: prombench
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prombench
  namespace: prombench
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: prombench
  name: prombench-token
  namespace: prombench
type: kubernetes.io/service-account-token
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: prometheus-operator
    app.kubernetes.io/version: 0.67.1
  name: prometheus-operator
  namespace: prombench
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: prometheus-operator
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: prometheus-operator
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: prometheus-operator
        app.kubernetes.io/version: 0.67.1
    spec:
      containers:
        - name: prometheus-operator
          image: quay.io/prometheus-operator/prometheus-operator:v0.67.1
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: "2000m"
              memory: "1024Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
          args:
            - --kubelet-service=kube-system/kubelet
            - --prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.67.1
            - --log-level=info
            - --namespaces=prombench
          ports:
            - containerPort: 8080
              name: http
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
      nodeSelector:
        kubernetes.io/os: linux
      terminationGracePeriodSeconds: 600
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: prombench
      # tolerations:
      # - effect: NoSchedule
      #   key: dedicated
      #   value: master
      # - effect: NoSchedule
      #   key: CriticalAddonsOnly
      #   value: "True"
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-operator
  namespace: prombench
spec:
  clusterIP: None
  ports:
  - name: http
    port: 8080
    targetPort: http
  selector:
    app.kubernetes.io/name: prometheus-operator
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  labels:
    prometheus.io/used-by: bench
  name: prometheus-operator
  namespace: prombench
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-operator
  namespaceSelector:
    matchNames:
      - prombench
  podMetricsEndpoints:
  - path: /metrics
    relabelings:
      - sourceLabels:
          - __meta_kubernetes_pod_container_port_number
        regex: "8080"
        action: keep
      - regex: __meta_kubernetes_pod_(node_name|host_ip)
        action: labelmap
      - regex: pod
        action: labeldrop
      - sourceLabels:
          - node_name
        action: replace
        targetLabel: node
      - targetLabel: job
        replacement: prometheus-operator
        action: replace
